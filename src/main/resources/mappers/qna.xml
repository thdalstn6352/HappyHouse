<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ssafy.vue.model.mapper.QnaMapper">

	<insert id="writeQna" parameterType="qnaDto">
		insert into qna (userid, subject, content, regtime)
		values (#{userid}, #{subject}, #{content}, now())
	</insert>
	
	<select id="list" parameterType="map" resultType="qnaDto">
		select qnano, userid, subject, content, answered, regtime,
				case when date_format(regtime, '%Y%m%d') = date_format(now(), '%Y%m%d')
				then date_format(regtime, '%H:%i:%s')
				else date_format(regtime, '%y.%m.%d')
				end regtime
		from qna
		order by qnano desc
		limit #{start}, #{spp}
	</select>
	
	<select id="getQna" parameterType="int" resultType="qnaDto">
		select qnano, userid, subject, content, regtime
		from qna
		where qnano = #{qnano}
	</select>
	
	<select id="getTotalCount" parameterType="map" resultType="int">
		select count(qnano)
		from qna
		<if test="word != null and word != ''">
			<if test="key == 'subject'">
				where subject like concat('%', #{word}, '%')
			</if>
			<if test="key != 'subject'">
				where ${key} = #{word}
			</if>
		</if>
	</select>
	
	<update id="modifyQna" parameterType="qnaDto">
		update qna
		set subject = #{subject}, content = #{content}
		where qnano = #{qnano}
	</update>
	
	<delete id="deleteQna" parameterType="int">
		delete from qna
		where qnano = #{qnano}
	</delete>
	
	<select id="listAnswer" parameterType="int" resultType="answerDto">
		select answerno, qnano, userid, content, regtime,
				case when date_format(regtime, '%Y%m%d') = date_format(now(), '%Y%m%d')
				then date_format(regtime, '%H:%i:%s')
				else date_format(regtime, '%y.%m.%d')
				end regtime
		from answer
		where qnano = #{qnano}
		order by qnano
	</select>
	
	<insert id="writeAnswer" parameterType="answerDto">
		insert into answer (qnano, userid, content, regtime)
		values (#{qnano}, #{userid}, #{content}, now())
	</insert>
	
	<update id="modifyAnswer" parameterType="answerDto">
		update answer
		set content = #{content}
		where answerno = #{answerno}
	</update>
	
	<delete id="deleteAnswer" parameterType="int">
		delete from answer
		where answerno = #{answerno}
	</delete>
	
	<update id="answeredTrue" parameterType="int">
		update qna
		set answered = true
		where qnano = #{qnano}
	</update>
	
	<update id="answeredFalse" parameterType="int">
		update qna
		set answered = false
		where qnano = #{qnano} and qnano not in (select qnano from answer where qnano = #{qnano})
	</update>
	
	<select id="getAnswer" parameterType="int" resultType="answerDto">
		select answerno, qnano, userid, content, regtime
		from answer
		where answerno = #{answerno}
	</select>
	
	
	

</mapper>
